// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.3.0
// source: fatima.message.v1.proto

package fatima_message_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FatimaMessageServiceClient is the client API for FatimaMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FatimaMessageServiceClient interface {
	SendFatimaMessage(ctx context.Context, in *SendFatimaMessageRequest, opts ...grpc.CallOption) (*SendFatimaMessageResponse, error)
}

type fatimaMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFatimaMessageServiceClient(cc grpc.ClientConnInterface) FatimaMessageServiceClient {
	return &fatimaMessageServiceClient{cc}
}

func (c *fatimaMessageServiceClient) SendFatimaMessage(ctx context.Context, in *SendFatimaMessageRequest, opts ...grpc.CallOption) (*SendFatimaMessageResponse, error) {
	out := new(SendFatimaMessageResponse)
	err := c.cc.Invoke(ctx, "/saturn.fatima.message.v1.FatimaMessageService/SendFatimaMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FatimaMessageServiceServer is the server API for FatimaMessageService service.
// All implementations must embed UnimplementedFatimaMessageServiceServer
// for forward compatibility
type FatimaMessageServiceServer interface {
	SendFatimaMessage(context.Context, *SendFatimaMessageRequest) (*SendFatimaMessageResponse, error)
	mustEmbedUnimplementedFatimaMessageServiceServer()
}

// UnimplementedFatimaMessageServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFatimaMessageServiceServer struct {
}

func (UnimplementedFatimaMessageServiceServer) SendFatimaMessage(context.Context, *SendFatimaMessageRequest) (*SendFatimaMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendFatimaMessage not implemented")
}
func (UnimplementedFatimaMessageServiceServer) mustEmbedUnimplementedFatimaMessageServiceServer() {}

// UnsafeFatimaMessageServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FatimaMessageServiceServer will
// result in compilation errors.
type UnsafeFatimaMessageServiceServer interface {
	mustEmbedUnimplementedFatimaMessageServiceServer()
}

func RegisterFatimaMessageServiceServer(s grpc.ServiceRegistrar, srv FatimaMessageServiceServer) {
	s.RegisterService(&FatimaMessageService_ServiceDesc, srv)
}

func _FatimaMessageService_SendFatimaMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFatimaMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FatimaMessageServiceServer).SendFatimaMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saturn.fatima.message.v1.FatimaMessageService/SendFatimaMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FatimaMessageServiceServer).SendFatimaMessage(ctx, req.(*SendFatimaMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FatimaMessageService_ServiceDesc is the grpc.ServiceDesc for FatimaMessageService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FatimaMessageService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "saturn.fatima.message.v1.FatimaMessageService",
	HandlerType: (*FatimaMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendFatimaMessage",
			Handler:    _FatimaMessageService_SendFatimaMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fatima.message.v1.proto",
}
